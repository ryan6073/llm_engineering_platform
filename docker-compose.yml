version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: llm_engineering_platform_app
    ports:
      - "${FASTAPI_PORT:-8000}:8000" # Use host port from .env or default to 8000
    volumes:
      - .:/app # Mount current directory to /app in container for development (live reload)
    env_file:
      - .env # Load environment variables from .env file
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload # For FastAPI with reload during dev
    depends_on:
      redis: # Example: if your app uses Redis
        condition: service_healthy # Wait for Redis to be healthy
      qdrant: # Example: if your app uses Qdrant
        condition: service_started # Or service_healthy if Qdrant has a health check

  redis: # Example Redis service for caching or message queue
    image: redis:7-alpine
    container_name: llm_platform_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant: # Example Qdrant vector database service
    image: qdrant/qdrant:v1.9.0 # Use a specific version
    container_name: llm_platform_qdrant
    ports:
      - "6333:6333" # gRPC port
      - "6334:6334" # REST API port
    volumes:
      - qdrant_storage:/qdrant/storage
    # environment: # Qdrant specific environment variables if needed
      # - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY} # If using API key for Qdrant

volumes: # Define named volumes for data persistence
  redis_data:
  qdrant_storage:

# To run: docker-compose up --build
# To stop: docker-compose down
# To stop and remove volumes: docker-compose down -v
